Grading at Sun Aug 18 19:54:48 UTC 2019
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==1292== Memcheck, a memory error detector
==1292== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1292== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1292== Command: ./test-eval inp.1.txt
==1292== Parent PID: 1291
==1292== 
==1292== Conditional jump or move depends on uninitialised value(s)
==1292==    at 0x402BC2: ranking_to_string (cards.c:13)
==1292==    by 0x402800: describe_hand (test-eval.c:69)
==1292==    by 0x402A21: main (test-eval.c:116)
==1292== 
==1292== Conditional jump or move depends on uninitialised value(s)
==1292==    at 0x402BC2: ranking_to_string (cards.c:13)
==1292==    by 0x402800: describe_hand (test-eval.c:69)
==1292==    by 0x402A41: main (test-eval.c:119)
==1292== 
==1292== Conditional jump or move depends on uninitialised value(s)
==1292==    at 0x401B62: compare_hands (eval.c:136)
==1292==    by 0x402A96: main (test-eval.c:124)
==1292== 
==1292== Conditional jump or move depends on uninitialised value(s)
==1292==    at 0x401B73: compare_hands (eval.c:138)
==1292==    by 0x402A96: main (test-eval.c:124)
==1292== 
==1292== 
==1292== HEAP SUMMARY:
==1292==     in use at exit: 0 bytes in 0 blocks
==1292==   total heap usage: 278 allocs, 278 frees, 13,728 bytes allocated
==1292== 
==1292== All heap blocks were freed -- no leaks are possible
==1292== 
==1292== For counts of detected and suppressed errors, rerun with: -v
==1292== Use --track-origins=yes to see where uninitialised values come from
==1292== ERROR SUMMARY: 20 errors from 4 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==1297== Memcheck, a memory error detector
==1297== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1297== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1297== Command: ./test-eval inp.2.txt
==1297== Parent PID: 1296
==1297== 
==1297== Conditional jump or move depends on uninitialised value(s)
==1297==    at 0x402BC2: ranking_to_string (cards.c:13)
==1297==    by 0x402800: describe_hand (test-eval.c:69)
==1297==    by 0x402A21: main (test-eval.c:116)
==1297== 
==1297== Conditional jump or move depends on uninitialised value(s)
==1297==    at 0x402BC2: ranking_to_string (cards.c:13)
==1297==    by 0x402800: describe_hand (test-eval.c:69)
==1297==    by 0x402A41: main (test-eval.c:119)
==1297== 
==1297== Conditional jump or move depends on uninitialised value(s)
==1297==    at 0x401B62: compare_hands (eval.c:136)
==1297==    by 0x402A96: main (test-eval.c:124)
==1297== 
==1297== Conditional jump or move depends on uninitialised value(s)
==1297==    at 0x401B73: compare_hands (eval.c:138)
==1297==    by 0x402A96: main (test-eval.c:124)
==1297== 
==1297== 
==1297== HEAP SUMMARY:
==1297==     in use at exit: 0 bytes in 0 blocks
==1297==   total heap usage: 232 allocs, 232 frees, 13,028 bytes allocated
==1297== 
==1297== All heap blocks were freed -- no leaks are possible
==1297== 
==1297== For counts of detected and suppressed errors, rerun with: -v
==1297== Use --track-origins=yes to see where uninitialised values come from
==1297== ERROR SUMMARY: 16 errors from 4 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
Valgrind returned an error status
==1302== Memcheck, a memory error detector
==1302== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1302== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1302== Command: ./test-eval inp.3.txt
==1302== Parent PID: 1301
==1302== 
==1302== Conditional jump or move depends on uninitialised value(s)
==1302==    at 0x402BC2: ranking_to_string (cards.c:13)
==1302==    by 0x402800: describe_hand (test-eval.c:69)
==1302==    by 0x402A21: main (test-eval.c:116)
==1302== 
==1302== Conditional jump or move depends on uninitialised value(s)
==1302==    at 0x402BC2: ranking_to_string (cards.c:13)
==1302==    by 0x402800: describe_hand (test-eval.c:69)
==1302==    by 0x402A41: main (test-eval.c:119)
==1302== 
==1302== Conditional jump or move depends on uninitialised value(s)
==1302==    at 0x401B62: compare_hands (eval.c:136)
==1302==    by 0x402A96: main (test-eval.c:124)
==1302== 
==1302== Conditional jump or move depends on uninitialised value(s)
==1302==    at 0x401B73: compare_hands (eval.c:138)
==1302==    by 0x402A96: main (test-eval.c:124)
==1302== 
==1302== 
==1302== HEAP SUMMARY:
==1302==     in use at exit: 0 bytes in 0 blocks
==1302==   total heap usage: 544 allocs, 544 frees, 18,344 bytes allocated
==1302== 
==1302== All heap blocks were freed -- no leaks are possible
==1302== 
==1302== For counts of detected and suppressed errors, rerun with: -v
==1302== Use --track-origins=yes to see where uninitialised values come from
==1302== ERROR SUMMARY: 40 errors from 4 contexts (suppressed: 0 from 0)
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==1307== Memcheck, a memory error detector
==1307== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1307== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1307== Command: ./test-eval inp.4.txt
==1307== Parent PID: 1306
==1307== 
==1307== Conditional jump or move depends on uninitialised value(s)
==1307==    at 0x402BC2: ranking_to_string (cards.c:13)
==1307==    by 0x402800: describe_hand (test-eval.c:69)
==1307==    by 0x402A21: main (test-eval.c:116)
==1307== 
==1307== Conditional jump or move depends on uninitialised value(s)
==1307==    at 0x402BC2: ranking_to_string (cards.c:13)
==1307==    by 0x402800: describe_hand (test-eval.c:69)
==1307==    by 0x402A41: main (test-eval.c:119)
==1307== 
==1307== Conditional jump or move depends on uninitialised value(s)
==1307==    at 0x401B62: compare_hands (eval.c:136)
==1307==    by 0x402A96: main (test-eval.c:124)
==1307== 
==1307== Conditional jump or move depends on uninitialised value(s)
==1307==    at 0x401B73: compare_hands (eval.c:138)
==1307==    by 0x402A96: main (test-eval.c:124)
==1307== 
==1307== 
==1307== HEAP SUMMARY:
==1307==     in use at exit: 0 bytes in 0 blocks
==1307==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==1307== 
==1307== All heap blocks were freed -- no leaks are possible
==1307== 
==1307== For counts of detected and suppressed errors, rerun with: -v
==1307== Use --track-origins=yes to see where uninitialised values come from
==1307== ERROR SUMMARY: 24 errors from 4 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==1336== Memcheck, a memory error detector
==1336== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1336== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1336== Command: ./test-eval inp.7.txt
==1336== Parent PID: 1335
==1336== 
==1336== Conditional jump or move depends on uninitialised value(s)
==1336==    at 0x402BC2: ranking_to_string (cards.c:13)
==1336==    by 0x402800: describe_hand (test-eval.c:69)
==1336==    by 0x402A21: main (test-eval.c:116)
==1336== 
==1336== Conditional jump or move depends on uninitialised value(s)
==1336==    at 0x402BC2: ranking_to_string (cards.c:13)
==1336==    by 0x402800: describe_hand (test-eval.c:69)
==1336==    by 0x402A41: main (test-eval.c:119)
==1336== 
==1336== Conditional jump or move depends on uninitialised value(s)
==1336==    at 0x401B62: compare_hands (eval.c:136)
==1336==    by 0x402A96: main (test-eval.c:124)
==1336== 
==1336== Conditional jump or move depends on uninitialised value(s)
==1336==    at 0x401B73: compare_hands (eval.c:138)
==1336==    by 0x402A96: main (test-eval.c:124)
==1336== 
==1336== 
==1336== HEAP SUMMARY:
==1336==     in use at exit: 0 bytes in 0 blocks
==1336==   total heap usage: 636 allocs, 636 frees, 21,404 bytes allocated
==1336== 
==1336== All heap blocks were freed -- no leaks are possible
==1336== 
==1336== For counts of detected and suppressed errors, rerun with: -v
==1336== Use --track-origins=yes to see where uninitialised values come from
==1336== ERROR SUMMARY: 40 errors from 4 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==1341== Memcheck, a memory error detector
==1341== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1341== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1341== Command: ./test-eval inp.8.txt
==1341== Parent PID: 1340
==1341== 
==1341== Conditional jump or move depends on uninitialised value(s)
==1341==    at 0x402BC2: ranking_to_string (cards.c:13)
==1341==    by 0x402800: describe_hand (test-eval.c:69)
==1341==    by 0x402A21: main (test-eval.c:116)
==1341== 
==1341== Conditional jump or move depends on uninitialised value(s)
==1341==    at 0x402BC2: ranking_to_string (cards.c:13)
==1341==    by 0x402800: describe_hand (test-eval.c:69)
==1341==    by 0x402A41: main (test-eval.c:119)
==1341== 
==1341== Conditional jump or move depends on uninitialised value(s)
==1341==    at 0x401B62: compare_hands (eval.c:136)
==1341==    by 0x402A96: main (test-eval.c:124)
==1341== 
==1341== Conditional jump or move depends on uninitialised value(s)
==1341==    at 0x401B73: compare_hands (eval.c:138)
==1341==    by 0x402A96: main (test-eval.c:124)
==1341== 
==1341== 
==1341== HEAP SUMMARY:
==1341==     in use at exit: 0 bytes in 0 blocks
==1341==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==1341== 
==1341== All heap blocks were freed -- no leaks are possible
==1341== 
==1341== For counts of detected and suppressed errors, rerun with: -v
==1341== Use --track-origins=yes to see where uninitialised values come from
==1341== ERROR SUMMARY: 24 errors from 4 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==1358== Memcheck, a memory error detector
==1358== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1358== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1358== Command: ./test-eval inp.10.txt
==1358== Parent PID: 1357
==1358== 
==1358== Conditional jump or move depends on uninitialised value(s)
==1358==    at 0x402BC2: ranking_to_string (cards.c:13)
==1358==    by 0x402800: describe_hand (test-eval.c:69)
==1358==    by 0x402A41: main (test-eval.c:119)
==1358== 
==1358== Conditional jump or move depends on uninitialised value(s)
==1358==    at 0x401B62: compare_hands (eval.c:136)
==1358==    by 0x402A96: main (test-eval.c:124)
==1358== 
==1358== Conditional jump or move depends on uninitialised value(s)
==1358==    at 0x401B73: compare_hands (eval.c:138)
==1358==    by 0x402A96: main (test-eval.c:124)
==1358== 
==1358== Conditional jump or move depends on uninitialised value(s)
==1358==    at 0x402BC2: ranking_to_string (cards.c:13)
==1358==    by 0x402800: describe_hand (test-eval.c:69)
==1358==    by 0x402A21: main (test-eval.c:116)
==1358== 
==1358== 
==1358== HEAP SUMMARY:
==1358==     in use at exit: 0 bytes in 0 blocks
==1358==   total heap usage: 3,988 allocs, 3,988 frees, 80,704 bytes allocated
==1358== 
==1358== All heap blocks were freed -- no leaks are possible
==1358== 
==1358== For counts of detected and suppressed errors, rerun with: -v
==1358== Use --track-origins=yes to see where uninitialised values come from
==1358== ERROR SUMMARY: 210 errors from 4 contexts (suppressed: 0 from 0)

Overall Grade: F
